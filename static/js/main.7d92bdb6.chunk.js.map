{"version":3,"sources":["components/EmployeeList.js","components/Employee.js","App.js","reportWebVitals.js","index.js"],"names":["EmployeeList","props","employees","map","employee","src","picture","alt","name","email","phone","Employee","state","filteredEmployees","sortOrder","getEmployeeDetails","axios","get","then","response","setState","data","results","result","thumbnail","first","last","sortEmployee","_","orderBy","handleInputChange","event","searchValue","target","value","filteredEmployee","filter","toLowerCase","includes","this","class","for","type","onChange","className","onClick","icon","faCaretUp","faCaretDown","colSpan","Component","App","id","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6QAaeA,EAXM,SAACC,GACpB,OACEA,EAAMC,UAAUC,KAAI,SAAAC,GAAQ,OAAI,+BAC9B,mCAAK,qBAAKC,IAAMD,EAASE,QAASC,IAAK,cAAvC,OACA,6BAAKH,EAASI,OACd,6BAAKJ,EAASK,QACd,6BAAKL,EAASM,e,8BC+FLC,E,4MA9FXC,MAAO,CACHV,UAAU,KACVW,kBAAkB,KAClBC,UAAU,O,EAGdC,mBAAqB,WACjB,OAAOC,IAAMC,IAAI,sEAChBC,MAAK,SAAAC,GACF,EAAKC,SAAS,CACNlB,UAAUiB,EAASE,KAAKC,QACvBnB,KAAI,SAAAoB,GACD,MAAO,CACHjB,QAASiB,EAAOjB,QAAQkB,UACxBhB,KAAK,GAAD,OAAKe,EAAOf,KAAKiB,MAAjB,YAA0BF,EAAOf,KAAKkB,MAC1CjB,MAAOc,EAAOd,MACdC,MAAOa,EAAOb,gB,EAWtCiB,aAAe,WACyB,OAAjC,EAAKf,MAAMC,kBACV,EAAKO,SAAS,CACVP,kBAAkBe,IAAEC,QAAS,EAAKjB,MAAMC,kBAAoB,CAAC,QAAS,CAAC,EAAKD,MAAME,YAClFA,UAAoC,QAAzB,EAAKF,MAAME,UAAsB,OAAS,QAKzD,EAAKM,SAAS,CACVlB,UAAU0B,IAAEC,QAAS,EAAKjB,MAAMV,UAAY,CAAC,QAAS,CAAC,EAAKU,MAAME,YAClEA,UAAoC,QAAzB,EAAKF,MAAME,UAAsB,OAAS,S,EAOjEgB,kBAAoB,SAAAC,GAChB,IAAMC,EAAaD,EAAME,OAAOC,MAChC,GAAGF,EAAY,CACX,IAAMG,EAAmB,EAAKvB,MAAMV,UAAUkC,QAAO,SAAAhC,GACrD,GAAGA,EAASI,KAAK6B,cAAcC,SAASN,GACpC,OAAO5B,KAGf,EAAKgB,SAAS,CAACP,kBAAkBsB,SAE7B,EAAKf,SAAS,CAACP,kBAAkB,Q,uDAhCzC,WACI0B,KAAKxB,uB,oBAoCT,WAEI,OACI,gCACI,sBAAKyB,MAAM,cAAX,UACI,uBAAOC,IAAI,SAAX,2BACA,uBAAOC,KAAK,OAAOC,SAAUJ,KAAKT,oBAFtC,IAE2D,uBACvD,0BAGJ,wBAAOU,MAAM,QAAb,UACI,uBAAOA,MAAM,aAAb,SACI,+BACI,uCACA,uCAAS,yBAAQI,UAAU,OAAOC,QAASN,KAAKZ,aAAvC,UACe,QAAvBY,KAAK3B,MAAME,WAAqB,cAAC,IAAD,CAAiBgC,KAAMC,MAChC,SAAvBR,KAAK3B,MAAME,WAAsB,cAAC,IAAD,CAAiBgC,KAAME,YAGzD,uCACA,4CAGR,gCACMT,KAAK3B,MAAMV,WAAaqC,KAAK3B,MAAMC,kBACpC,cAAC,EAAD,CAAcX,UAAWqC,KAAK3B,MAAMC,mBAAqB0B,KAAK3B,MAAMV,YACnE,6BAAI,oBAAI+C,QAAQ,IAAZ,mC,GAxFPC,aCQRC,MAXf,WACE,OACE,sBAAKC,GAAG,MAAR,UACE,yBAAQZ,MAAM,OAAd,+BACA,mBAAGA,MAAM,UAAT,qEAEC,cAAC,EAAD,QCEQa,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBrC,MAAK,YAAkD,IAA/CsC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCAdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.7d92bdb6.chunk.js","sourcesContent":["import React from \"react\";\n\nconst EmployeeList = (props) => {\n  return (\n    props.employees.map(employee => <tr>\n      <td> <img src ={employee.picture} alt= \"thumbnail\"/> </td>\n      <td>{employee.name}</td>\n      <td>{employee.email}</td>\n      <td>{employee.phone}</td>\n    </tr>)\n    );\n};\n\nexport default EmployeeList;","import React, { Component } from \"react\";\nimport axios from \"axios\"\nimport EmployeeList from \"./EmployeeList\"\nimport _ from 'lodash'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faCaretUp, faCaretDown } from '@fortawesome/free-solid-svg-icons'\n\nclass Employee extends Component{\n\n    state= {\n        employees:null,\n        filteredEmployees:null,\n        sortOrder:'asc'\n    }\n    \n    getEmployeeDetails = () => {\n        return axios.get('https://randomuser.me/api/?results=10&inc=phone,name,email,picture')\n        .then(response => {\n            this.setState({\n                    employees:response.data.results\n                    .map(result => {\n                        return {\n                            picture: result.picture.thumbnail,\n                            name: `${result.name.first} ${result.name.last}`,\n                            email: result.email,\n                            phone: result.phone\n                        }\n                    })\n                })\n        })\n    }\n\n    componentDidMount(){\n        this.getEmployeeDetails();\n    }\n\n    sortEmployee = () => {\n        if(this.state.filteredEmployees !== null){\n            this.setState({\n                filteredEmployees:_.orderBy((this.state.filteredEmployees), ['name'], [this.state.sortOrder]),\n                sortOrder: this.state.sortOrder === \"asc\" ? \"desc\" : \"asc\"\n                \n            }\n        )\n        } else {\n            this.setState({\n                employees:_.orderBy((this.state.employees), ['name'], [this.state.sortOrder]),\n                sortOrder: this.state.sortOrder === \"asc\" ? \"desc\" : \"asc\"\n            }\n        )\n        }\n        \n    }\n\n    handleInputChange = event =>{\n        const searchValue= event.target.value\n        if(searchValue){\n            const filteredEmployee = this.state.employees.filter(employee => {\n            if(employee.name.toLowerCase().includes(searchValue)){\n                return employee\n            }\n        })\n        this.setState({filteredEmployees:filteredEmployee})\n        } else {\n            this.setState({filteredEmployees:null})\n        }\n        \n    }\n\n    render(){\n        // console.log('employeeList', this.state.employees)\n        return(\n            <div>\n                <div class=\"text-center\">\n                    <label for=\"search\"> Search Name </label>\n                    <input type=\"text\" onChange={this.handleInputChange}/> <br/>\n                    <br/>\n                </div>\n           \n                <table class=\"table\">\n                    <thead class=\"thead-dark\">\n                        <tr>\n                            <th>Image</th>\n                            <th>Name <button className=\"sort\" onClick={this.sortEmployee}> \n                            {this.state.sortOrder===\"asc\" && <FontAwesomeIcon icon={faCaretUp} />}\n                            {this.state.sortOrder===\"desc\" && <FontAwesomeIcon icon={faCaretDown} />}\n                            </button>\n                            </th>\n                            <th>Email</th>\n                            <th>Phone</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {(this.state.employees || this.state.filteredEmployees) ?\n                         <EmployeeList employees={this.state.filteredEmployees || this.state.employees} />\n                        : <tr><td colSpan=\"4\">No Data</td></tr>}\n                    </tbody>\n                </table>\n            </div>\n        );\n    }\n}\n\nexport default Employee;","import React from \"react\"\nimport './App.css';\nimport Employee from \"./components/Employee\"\n\nfunction App() {\n  return (\n    <div id=\"app\">\n      <header class=\"head\">Employee Directory\n      <p class=\"subtext\"> Click on carrot in the name field to sort the name </p>\n      </header>\n       <Employee />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}